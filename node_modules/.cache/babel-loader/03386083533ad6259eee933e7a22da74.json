{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Teresa\\\\Documents\\\\dev\\\\2021\\\\projects\\\\Udemy_React_Complete_Guide\\\\react-complete-guide\\\\src\\\\components\\\\NewExpense\\\\NewExpense.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport ExpenseForm from \"./ExpenseForm\";\nimport \"./NewExpense.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst NewExpense = props => {\n  _s();\n\n  const [isEditing, setIsEditing] = useState(false);\n  const [isButtonVisible, setIsButtonVisible] = useState(true);\n\n  const saveExpenseDataHandler = enteredExpenseData => {\n    const expenseData = { ...enteredExpenseData,\n      id: Math.random().toString()\n    };\n    props.onAddExpense(expenseData);\n  };\n\n  const showFormHandler = () => {\n    setIsFormVisible(true);\n    setIsButtonVisible(false);\n  };\n\n  const closeFormHandler = () => {\n    setIsFormVisible(false);\n    setIsButtonVisible(true);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"new-expense\",\n    children: [isButtonVisible && /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: showFormHandler,\n      children: \"Add New Expense\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 9\n    }, this), isFormVisible && /*#__PURE__*/_jsxDEV(ExpenseForm, {\n      onSaveExpenseData: saveExpenseDataHandler,\n      onCancelClick: closeFormHandler\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 5\n  }, this);\n};\n\n_s(NewExpense, \"/wh9QWD/FB9kLXi7spHAdW9Fu/M=\");\n\n_c = NewExpense;\nexport default NewExpense;\n\nvar _c;\n\n$RefreshReg$(_c, \"NewExpense\");","map":{"version":3,"sources":["C:/Users/Teresa/Documents/dev/2021/projects/Udemy_React_Complete_Guide/react-complete-guide/src/components/NewExpense/NewExpense.js"],"names":["React","useState","ExpenseForm","NewExpense","props","isEditing","setIsEditing","isButtonVisible","setIsButtonVisible","saveExpenseDataHandler","enteredExpenseData","expenseData","id","Math","random","toString","onAddExpense","showFormHandler","setIsFormVisible","closeFormHandler","isFormVisible"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,WAAP,MAAwB,eAAxB;AAEA,OAAO,kBAAP;;;AAEA,MAAMC,UAAU,GAAIC,KAAD,IAAW;AAAA;;AAC5B,QAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4BL,QAAQ,CAAC,KAAD,CAA1C;AACA,QAAM,CAACM,eAAD,EAAkBC,kBAAlB,IAAwCP,QAAQ,CAAC,IAAD,CAAtD;;AAEA,QAAMQ,sBAAsB,GAAIC,kBAAD,IAAwB;AACrD,UAAMC,WAAW,GAAG,EAClB,GAAGD,kBADe;AAElBE,MAAAA,EAAE,EAAEC,IAAI,CAACC,MAAL,GAAcC,QAAd;AAFc,KAApB;AAIAX,IAAAA,KAAK,CAACY,YAAN,CAAmBL,WAAnB;AACD,GAND;;AAQA,QAAMM,eAAe,GAAG,MAAM;AAC5BC,IAAAA,gBAAgB,CAAC,IAAD,CAAhB;AACAV,IAAAA,kBAAkB,CAAC,KAAD,CAAlB;AACD,GAHD;;AAKA,QAAMW,gBAAgB,GAAG,MAAM;AAC7BD,IAAAA,gBAAgB,CAAC,KAAD,CAAhB;AACAV,IAAAA,kBAAkB,CAAC,IAAD,CAAlB;AACD,GAHD;;AAKA,sBACE;AAAK,IAAA,SAAS,EAAC,aAAf;AAAA,eACGD,eAAe,iBACd;AAAQ,MAAA,OAAO,EAAEU,eAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAFJ,EAIGG,aAAa,iBACZ,QAAC,WAAD;AACE,MAAA,iBAAiB,EAAEX,sBADrB;AAEE,MAAA,aAAa,EAAEU;AAFjB;AAAA;AAAA;AAAA;AAAA,YALJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAaD,CAnCD;;GAAMhB,U;;KAAAA,U;AAoCN,eAAeA,UAAf","sourcesContent":["import React, { useState } from \"react\";\nimport ExpenseForm from \"./ExpenseForm\";\n\nimport \"./NewExpense.css\";\n\nconst NewExpense = (props) => {\n  const [isEditing, setIsEditing] = useState(false);\n  const [isButtonVisible, setIsButtonVisible] = useState(true);\n\n  const saveExpenseDataHandler = (enteredExpenseData) => {\n    const expenseData = {\n      ...enteredExpenseData,\n      id: Math.random().toString(),\n    };\n    props.onAddExpense(expenseData);\n  };\n\n  const showFormHandler = () => {\n    setIsFormVisible(true);\n    setIsButtonVisible(false);\n  };\n\n  const closeFormHandler = () => {\n    setIsFormVisible(false);\n    setIsButtonVisible(true);\n  };\n\n  return (\n    <div className=\"new-expense\">\n      {isButtonVisible && (\n        <button onClick={showFormHandler}>Add New Expense</button>\n      )}\n      {isFormVisible && (\n        <ExpenseForm\n          onSaveExpenseData={saveExpenseDataHandler}\n          onCancelClick={closeFormHandler}\n        />\n      )}\n    </div>\n  );\n};\nexport default NewExpense;\n"]},"metadata":{},"sourceType":"module"}